   ////////
   //
   //   This code gives example of appending to a dataset in hdf5
   //
   const int RANK = 2;
   const int NE = 3;
   const int NT = 10;
   //
   hsize_t dims[2] = {NE,1};
   hsize_t maxdims[2] = {H5S_UNLIMITED,H5S_UNLIMITED};
   DataSpace mspace1(RANK, dims, maxdims);
   //
   const string outputFileTest = "outputTest.h5";
   H5File fileTest(outputFileTest.c_str(), H5F_ACC_TRUNC); // overwrites old
   //
   DSetCreatPropList cparms;
   hsize_t chunk_dims[2]={1,1}; // the values here seem to make no difference
   cparms.setChunk(RANK,chunk_dims); 
   //
   int fill_val = 0;
   cparms.setFillValue(PredType::NATIVE_INT, &fill_val);
   DataSet dataset = fileTest.createDataSet("ExtendibleArray",PredType::NATIVE_INT,
                                             mspace1,cparms);
   //
   hsize_t size[2];
   size[0] = NE;
   size[1] = 1;
   dataset.extend(size);
   //
   DataSpace fspace1 = dataset.getSpace();
   hsize_t offset[2];
   offset[0] = 0;
   offset[1] = 0;
   hsize_t dims1[2] = {NE,1}; // data1 dimensions
   fspace1.selectHyperslab(H5S_SELECT_SET,dims1,offset);
   //
   int data1[NE][1] = {{1},{1},{1}};
   dataset.write(data1,PredType::NATIVE_INT,mspace1,fspace1);
   // 
   //
   // 
   offset[0] = 0;
   offset[1] = dims[1];
   hsize_t dims2[2] = {NE,1};
   dims[1] = dims1[1]+dims2[1];
   size[0] = dims[0];
   size[1] = dims[1];
   dataset.extend(size);
   DataSpace fspace2 = dataset.getSpace();
   fspace2.selectHyperslab(H5S_SELECT_SET,dims2,offset);
   DataSpace mspace2(RANK,dims2);
   int data2[NE][1] = {{2},{2},{2}};
   dataset.write(data2,PredType::NATIVE_INT,mspace2,fspace2); 
   // 
   //
   // 
   dataset.close();
   //fileTest.close();
   DataSet dataset2 = fileTest.openDataSet("ExtendibleArray");
   
   hid_t file2, dset2;
   file2 = H5Fopen ("outputTest.h5", H5F_ACC_RDONLY, H5P_DEFAULT);
   dset2 = H5Dopen (file2, "ExtendibleArray", H5P_DEFAULT);
   hid_t dspace2 = H5Dget_space(dset2);
   const int ndims2 = H5Sget_simple_extent_ndims(dspace2);
   hsize_t dimstest[ndims2];
   H5Sget_simple_extent_dims(dspace2,dimstest,NULL);
   //
   //
   //
   offset[0] = 0;
   offset[1] = dimstest[1];
   hsize_t dims3[2] = {NE,1};
   dims[1] = dimstest[1]+dims3[1];
   size[0] = dims[0];
   size[1] = dims[1];
   dataset2.extend(size);
   DataSpace fspace3 = dataset2.getSpace();
   fspace3.selectHyperslab(H5S_SELECT_SET,dims3,offset);
   DataSpace mspace3(RANK,dims3);
   int data3[NE][1] = {{3},{3},{3}};
   dataset2.write(data3,PredType::NATIVE_INT,mspace3,fspace3); 